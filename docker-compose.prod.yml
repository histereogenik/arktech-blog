services:
  reverse-proxy:
    image: traefik:v3.1
    container_name: traefik
    command:
      - /bin/sh
      - -c
      - |
        chmod 600 /letsencrypt/acme.json || true
        traefik
      - "--providers.docker"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=king@arktech.uk"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./letsencrypt:/letsencrypt"

  db:
    image: postgres:16
    container_name: arktech_db
    environment:
      POSTGRES_DB: arktech
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD_FILE: /run/secrets/db-password
    volumes:
      - ./db/password.txt:/run/secrets/db-password:ro
      - postgres_data:/var/lib/postgresql/data/

  media-server:
    image: nginx:alpine
    container_name: media_server
    volumes:
      - ./media:/usr/share/nginx/html:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.media.rule=Host(`arktech.uk`) && PathPrefix(`/media`)"
      - "traefik.http.routers.media.entrypoints=websecure"
      - "traefik.http.routers.media.tls.certresolver=myresolver"

  web:
    build:
      context: .
    container_name: arktech_web
    command: >
      sh -c "python manage.py migrate &&
             gunicorn arktech_blog.wsgi:application --bind 0.0.0.0:8000 --workers 4"
    env_file:
      - .env.prod
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.arktech.rule=Host(`arktech.uk`)"
      - "traefik.http.routers.arktech.entrypoints=websecure"
      - "traefik.http.routers.arktech.tls.certresolver=myresolver"
    expose:
      - "8000"
    depends_on:
      - db

volumes:
  postgres_data:
